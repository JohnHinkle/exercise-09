---
title: "exercise-09"
author: "John Hinkle"
format: html
editor: visual
self-contained: true
---

## Step 1: Load data and packages

```{r}
library(tidyverse)
library(cowplot) # for making multi-panel figures
library(mosaic)
d <- read_csv("https://raw.githubusercontent.com/difiore/ada-datasets/main/KamilarAndCooperData.csv")
```

## Step 2: Plot lifespan vs female body mass

```{r}
p1 <- ggplot(d, aes(x= Body_mass_female_mean, y = MaxLongevity_m)) +
  geom_point(color = "#bf5700")

p2 <- ggplot(d, aes(x= log(Body_mass_female_mean), y = MaxLongevity_m)) +
  geom_point(color = "#bf5700")

p3 <- ggplot(d, aes(x= log(Body_mass_female_mean), y = log(MaxLongevity_m))) +
  geom_point(color = "#bf5700")

plot_grid(p1, p2, p3, nrow = 1)
```

## Step 3: Run linear models

```{r}
m1 <- lm(MaxLongevity_m ~ Body_mass_female_mean, data = d)
m2 <- lm(MaxLongevity_m ~ log(Body_mass_female_mean), data = d)
m3 <- lm(log(MaxLongevity_m) ~ log(Body_mass_female_mean), data = d)
```

## Step 4: Generate and manually plot residuals

```{r}

m1_residuals <- m1$residuals
m2_residuals <- m2$residuals
m3_residuals <- m3$residuals

m1_plot <- ggplot(data = NULL, aes(x= m1$model$Body_mass_female_mean, y = m1_residuals)) +
  geom_point(color = "#bf5700") +
  xlab("Female body mass")

m2_plot <- ggplot(data = NULL, aes(x= m2$model$`log(Body_mass_female_mean)`, y = m2_residuals)) +
  geom_point(color = "#bf5700") +
  xlab("log(Female body mass)")

m3_plot <- ggplot(data = NULL, aes(x= m3$model$`log(Body_mass_female_mean)`, y = m3_residuals)) +
  geom_point(color = "#bf5700") +
  xlab("log(Female body mass)")

m1_hist <- histogram(m1_residuals, nint=20)
m2_hist <- histogram(m2_residuals, nint=20)
m3_hist <- histogram(m3_residuals, nint=20)

plot_grid(m1_plot, m2_plot, m3_plot, m1_hist, m2_hist, m3_hist, nrow = 2)
```

## Step 5: QQ Plots

```{r}
par(mfrow=c(1, 3))

qqnorm(m1_residuals, main="Q-Q plot for M1 Residuals")
qqline(m1_residuals, col = "#bf5700")

qqnorm(m2_residuals, main="Q-Q plot for M2 Residuals")
qqline(m2_residuals, col = "#bf5700")

qqnorm(m3_residuals, main="Q-Q plot for M3 Residuals")
qqline(m3_residuals, col = "#bf5700")
```

## Step 6: Linear Model Plots

```{r}
# Model 1 Plots
par(mfrow = c(2, 2))
plot(m1)
```

```{r}
# Model 2 Plots
par(mfrow = c(2, 2))
plot(m2)
```

```{r}
# Model 3 Plots
par(mfrow = c(2, 2))
plot(m3)
```

## Step 7: Shapiro Test

```{r}
# Linear Model 1
shapiro.test(m1_residuals)

# Linear Model 2
shapiro.test(m2_residuals)

# Linear Model 3
shapiro.test(m3_residuals)
```
